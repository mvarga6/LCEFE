#!/bin/bash
#PBS -l walltime=:01:00:00
#PBS -l nodes=1:ppn=1:gpus=1
#PBS -N LCE_simulation
#PBS -j oe

# Make sure data directory was specified or quit.
if [ -z ${datadir+x} ]
then
	echo "Data folder not specified. Use '-v datadir[=value]'"
	exit 1
fi

# Create list of cmdline options for execution of simulation.
List=()
i=0
if [ ! -z ${phi+x} ]; then List[$i]="-p $phi"; ((++i)); fi
if [ ! -z ${smax+x} ]; then List[$i]="-t $smax"; ((++i)); fi
if [ ! -z ${smin+x} ]; then List[$i]="-b $smin"; ((++i)); fi
if [ ! -z ${sqh+x} ]; then List[$i]="-H $sqh"; ((++i)); fi
if [ ! -z ${sql+x} ]; then List[$i]="-l $sql"; ((++i)); fi
if [ ! -z ${out+x} ]; then List[$i]="-o $out"; ((++i)); fi
if [ ! -z ${son+x} ]; then List[$i]="-r $son"; ((++i)); fi
if [ ! -z ${soff+x} ]; then List[$i]="-f $soff"; ((++i)); fi
if [ ! -z ${flags+x} ]; then List[$i]="$flags"; ((++i)); fi
echo "Command line arguments received from script:"
echo "${List[@]}"

# Set copy command in case of job termination (walltime limit exceeded).
trap "cd $PBS_O_WORKDIR; cd ~/mvarga/LCEOUT/; mkdir $PBS_JOBID; cp $TMPDIR/${out}* $PBS_JOBID" TERM

# Copy resources from repository needed to run in tmp directory on node.
cp ~/mvarga/LCEFE/gafe6 $TMPDIR
cp ~/mvarga/LCEFE/Mesh/thinfilm3.msh $TMPDIR #should be gafe6 input.
cd $TMPDIR

# Setup local directory structure and execution environment in tmp directory.
mkdir Mesh
mv thinfilm3.msh Mesh/
module load cuda/7.5.18
module load gnu/4.9.1

# Run simulation then copy output with $out prefix key to data directory.
time ./gafe6 ${List[@]}
cp ${out}* ${datadir}

# Archeive data into tarball
cd ${datadir}
tar --remove-files -zcvf "${out}.tar.gz" ${out}*
